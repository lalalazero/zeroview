#https://github.com/revolunet/create-react-app-circleci/blob/master/.circleci/config.yml
defaults: &defaults
  docker:
    - image: circleci/node:8
    # - image: selenium/standalone-chrome:3.1.0

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - package.json
            - LICENSE
            - README.md
  build_example:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn build-example
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - package.json
            - LICENSE
            - README.md
  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn test
      - store_test_results:
          path: test-results
  deploy-example:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      # - run: ./deploy_ghpages.sh
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "zzzero520@hotmail.com"
            git config user.name "lalalazero"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dist dist
  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
      - run: npm publish



workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - prepare
      # - build:
      #     requires:
      #       - test
      - build_example:
          requires:
            - prepare
            # - test
      # - test:
      #     requires:
      #       - prepare
      - deploy-example:
          requires:
          - build_example
